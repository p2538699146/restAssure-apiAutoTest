2020-05-11 01:25:41 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:42 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:43 method: cn.Knife.Wework.Utils.Super_Utils.YamlFactoryIsReadYamlAndWriterYaml(Super_Utils.java:184) - [ INFO ] -> 当前操作状态：读取
2020-05-11 01:25:48 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:48 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:48 method: cn.Knife.Wework.Utils.Rest_Perfect.getSystemDate(Rest_Perfect.java:63) - [ INFO ] -> 当前系统时间：Mon May 11 01:25:48 CST 2020
2020-05-11 01:25:49 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 01:25:49 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:49 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:49 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 01:25:49 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:49 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:50 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:50 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:50 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:50 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:50 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:50 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:51 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:51 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:51 method: cn.Knife.Wework.Utils.Rest_Perfect.getSystemDate(Rest_Perfect.java:63) - [ INFO ] -> 当前系统时间：Mon May 11 01:25:51 CST 2020
2020-05-11 01:25:51 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 01:25:51 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:51 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:52 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 01:25:52 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:52 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:52 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:52 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:53 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:53 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:53 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:53 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:53 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:53 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:54 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:54 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:54 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:54 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:55 method: cn.Knife.Wework.Utils.Rest_Perfect.getSystemDate(Rest_Perfect.java:63) - [ INFO ] -> 当前系统时间：Mon May 11 01:25:55 CST 2020
2020-05-11 01:25:55 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 01:25:55 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:55 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:55 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 01:25:55 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:55 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:55 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:55 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:56 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:56 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:56 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:56 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:56 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:56 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:57 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:57 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:57 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:57 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:58 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:58 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:58 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:58 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:58 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:58 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 01:25:59 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 01:25:59 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 01:25:59 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 02:56:12 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:181) - [ INFO ] -> ***********开始连接数据库***********
2020-05-11 02:56:12 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:182) - [ INFO ] -> 连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
2020-05-11 02:56:12 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:183) - [ INFO ] -> 用户名：[root]
2020-05-11 02:56:12 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:184) - [ INFO ] -> 密码：[p2538699146]
2020-05-11 02:56:13 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:104) - [ INFO ] -> 开始执行查询操作！
2020-05-11 02:56:13 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:142) - [ ERROR ] -> 出现报错，请检查sql集：{"$.query":"select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';"}
2020-05-11 02:56:13 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:143) - [ ERROR ] -> 报错内容：java.sql.SQLException: Column index out of range.
2020-05-11 02:56:13 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:146) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 03:01:10 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:182) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[" + url + "]
用户名：[" + user + "]
密码：[" + password + "]
2020-05-11 03:01:11 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:104) - [ INFO ] -> 开始执行查询操作！
2020-05-11 03:01:11 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:142) - [ ERROR ] -> 出现报错，请检查sql集：{"$.query":"select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';"}
2020-05-11 03:01:11 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:143) - [ ERROR ] -> 报错内容：java.sql.SQLException: Column index out of range.
2020-05-11 03:01:11 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:147) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 03:02:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:183) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 03:02:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:105) - [ INFO ] -> 开始执行查询操作！
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：case_Id
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：1
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：desc
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：正常登录
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：api_Name
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：登录接口
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：api_Type
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：post_json
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：login_by
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：paramter
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：module
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：login
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：expected
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 03:02:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:148) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 03:03:12 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:183) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 03:03:12 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:105) - [ INFO ] -> 开始执行查询操作！
2020-05-11 03:03:36 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:03:39 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：case_Id
2020-05-11 03:03:41 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：1
2020-05-11 03:03:51 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:03:52 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：desc
2020-05-11 03:03:53 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：正常登录
2020-05-11 03:04:09 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:04:13 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：api_Name
2020-05-11 03:04:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：登录接口
2020-05-11 03:04:27 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:04:28 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：api_Type
2020-05-11 03:04:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：post_json
2020-05-11 03:04:47 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:04:48 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 03:04:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：login_by
2020-05-11 03:04:56 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:04:56 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：paramter
2020-05-11 03:04:56 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 03:04:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:04:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：module
2020-05-11 03:04:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：login
2020-05-11 03:05:00 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:05:00 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：expected
2020-05-11 03:05:00 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 03:05:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:148) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 03:10:12 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:185) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 03:10:13 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:105) - [ INFO ] -> 开始执行查询操作！
2020-05-11 03:10:13 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:145) - [ ERROR ] -> 出现报错，请检查sql集：{"$.query":"select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';"}
2020-05-11 03:10:13 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:146) - [ ERROR ] -> 报错内容：java.sql.SQLException: Column index out of range.
2020-05-11 03:10:13 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:150) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:185) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:105) - [ INFO ] -> 开始执行查询操作！
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：case_Id
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：1
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：desc
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：正常登录
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Name
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：登录接口
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Type
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：post_json
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login_by
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：paramter
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：module
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：expected
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：result
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：case_Id
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：2
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：desc
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Name
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：登录接口
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Type
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：post_json
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login_by
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：paramter
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：module
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：expected
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：result
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：
2020-05-11 03:12:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:150) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 03:23:48 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:183) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:105) - [ INFO ] -> 开始执行查询操作！
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：case_Id
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：1
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：desc
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：正常登录
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：api_Name
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：登录接口
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：api_Type
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：post_json
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：login_by
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：paramter
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：module
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：login
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:135) - [ INFO ] -> 查询字段：expected
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 03:23:49 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:148) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 03:27:00 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:185) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:105) - [ INFO ] -> 开始执行查询操作！
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：case_Id
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：1
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：desc
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：正常登录
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Name
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：登录接口
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Type
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：post_json
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login_by
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：paramter
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：module
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：expected
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：result
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：case_Id
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：2
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：desc
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Name
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：登录接口
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Type
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：post_json
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login_by
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：paramter
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：module
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：expected
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：result
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：
2020-05-11 03:27:01 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:150) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 03:36:32 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:185) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 03:36:32 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:93) - [ INFO ] -> 开始执行更新数据操作！
2020-05-11 03:36:32 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:145) - [ ERROR ] -> 出现报错，请检查sql集：{"$.update":"UPDATEE apiautotestparamter \nSET api_Name = '我们开始修改啦啊啦啦啦' \nFROM\n\t\nWHERE\n\tapi_Type = 'post_json' \n\tAND case_Id = 1;"}
2020-05-11 03:36:32 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:146) - [ ERROR ] -> 报错内容：java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UPDATEE apiautotestparamter 
SET api_Name = '我们开始修改啦啊啦啦啦' ' at line 1
2020-05-11 03:36:32 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:150) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 03:38:18 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:185) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 03:38:19 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:93) - [ INFO ] -> 开始执行更新数据操作！
2020-05-11 03:38:19 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:145) - [ ERROR ] -> 出现报错，请检查sql集：{"$.update":"UPDATE apiautotestparamter \nSET api_Name = '我们开始修改啦啊啦啦啦' \nFROM\n\t\nWHERE\n\tapi_Type = 'post_json' \n\tAND case_Id = 1;"}
2020-05-11 03:38:19 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:146) - [ ERROR ] -> 报错内容：java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM
	
WHERE
	api_Type = 'post_json' 
	AND case_Id = 1' at line 3
2020-05-11 03:38:19 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:150) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 03:40:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:185) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 03:40:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:93) - [ INFO ] -> 开始执行更新数据操作！
2020-05-11 03:40:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:100) - [ INFO ] -> 更新成功，执行的sql：UPDATE apiautotestparamter 
SET api_Name = '我们开始修改啦啊啦啦啦' 
WHERE
	api_Type = 'post_json' 
	AND case_Id = 1;
2020-05-11 03:40:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:150) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 03:41:32 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:185) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:105) - [ INFO ] -> 开始执行查询操作！
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：case_Id
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：1
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：desc
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：正常登录
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Name
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：我们开始修改啦啊啦啦啦
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Type
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：post_json
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login_by
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：paramter
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：module
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：expected
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：result
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：case_Id
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：2
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：desc
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Name
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：登录接口
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Type
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：post_json
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login_by
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：paramter
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：module
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：expected
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：result
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：
2020-05-11 03:41:33 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:150) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:185) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:105) - [ INFO ] -> 开始执行查询操作！
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：case_Id
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：1
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：desc
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：正常登录
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Name
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：我们开始修改啦啊啦啦啦
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Type
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：post_json
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login_by
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：paramter
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：module
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：expected
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：result
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：case_Id
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：2
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：desc
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Name
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：登录接口
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Type
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：post_json
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login_by
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：paramter
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：module
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：login
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：expected
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:136) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 查询字段：result
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:138) - [ INFO ] -> 查询结果：
2020-05-11 03:43:14 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:150) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 15:58:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:184) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:100) - [ INFO ] -> 开始执行查询操作！
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：case_Id
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：1
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：desc
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：正常登录
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：api_Name
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：我们开始修改啦啊啦啦啦
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：api_Type
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：post_json
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：login_by
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：paramter
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：module
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：login
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：expected
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：result
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：case_Id
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：2
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：desc
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：api_Name
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：登录接口
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：api_Type
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：post_json
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：login_by
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：paramter
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：module
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：login
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：expected
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:131) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 查询字段：result
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询结果：
2020-05-11 15:58:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:146) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 16:11:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:196) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 16:30:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:186) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:100) - [ INFO ] -> 开始执行查询操作！
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：case_Id
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：1
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：desc
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：正常登录
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：api_Name
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：我们开始修改啦啊啦啦啦
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：api_Type
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：post_json
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：login_by
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：paramter
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：module
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：login
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：expected
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：result
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：case_Id
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：2
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：desc
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：api_Name
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：登录接口
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：api_Type
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：post_json
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：login_by
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：paramter
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：module
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：login
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：expected
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：result
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：
2020-05-11 16:30:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:146) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 16:33:28 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:186) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:100) - [ INFO ] -> 开始执行查询操作！
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：case_Id
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：1
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：desc
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：正常登录
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：api_Name
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：我们开始修改啦啊啦啦啦
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：api_Type
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：post_json
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：login_by
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：paramter
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：module
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：login
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：expected
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：result
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：case_Id
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：2
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：desc
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：api_Name
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：登录接口
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：api_Type
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：post_json
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：login_by
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：paramter
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：module
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：login
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：expected
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:132) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 查询字段：result
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:134) - [ INFO ] -> 查询结果：
2020-05-11 16:33:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:146) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 16:53:34 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:207) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:120) - [ INFO ] -> 开始执行查询操作！
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：case_Id
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：1
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：desc
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：正常登录
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：api_Name
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：我们开始修改啦啊啦啦啦
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：api_Type
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：post_json
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：login_by
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：paramter
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：module
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：login
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：expected
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：result
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：case_Id
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：2
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：desc
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：api_Name
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：登录接口
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：api_Type
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：post_json
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：login_by
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：paramter
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：module
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：login
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：expected
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：result
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：
2020-05-11 16:53:35 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:166) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 16:53:36 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:120) - [ INFO ] -> 开始执行查询操作！
2020-05-11 16:53:36 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:161) - [ ERROR ] -> 出现报错，请检查sql集：{"$.query":"select * from apiautotestparamter where case_id = 4;"}
2020-05-11 16:53:36 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:162) - [ ERROR ] -> 报错内容：java.sql.SQLNonTransientConnectionException: No operations allowed after connection closed.
2020-05-11 16:53:36 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:166) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 16:53:36 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:177) - [ INFO ] -> 更新成功，执行的sql：null
2020-05-11 16:55:45 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:207) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:120) - [ INFO ] -> 开始执行查询操作！
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：case_Id
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：1
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：desc
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：正常登录
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：api_Name
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：我们开始修改啦啊啦啦啦
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：api_Type
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：post_json
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：login_by
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：paramter
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：module
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：login
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：expected
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：result
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：case_Id
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：2
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：desc
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：api_Name
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：登录接口
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：api_Type
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：post_json
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：login_by
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：paramter
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：module
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：login
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：expected
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:152) - [ INFO ] -> 当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:153) - [ INFO ] -> 查询字段：result
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 查询结果：
2020-05-11 16:55:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:166) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 16:55:47 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:120) - [ INFO ] -> 开始执行查询操作！
2020-05-11 16:55:47 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:161) - [ ERROR ] -> 出现报错，请检查sql集：{"$.query":"select * from apiautotestparamter where case_id = 4;"}
2020-05-11 16:55:47 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:162) - [ ERROR ] -> 报错内容：java.sql.SQLNonTransientConnectionException: No operations allowed after connection closed.
2020-05-11 16:55:47 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:166) - [ INFO ] -> 开始关闭数据库连接
2020-05-11 16:55:47 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:177) - [ INFO ] -> 更新成功，执行的sql：null
2020-05-11 17:40:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 开始执行查询操作！
2020-05-11 17:44:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:139) - [ INFO ] -> 开始执行查询操作！
2020-05-11 17:44:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:310) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：case_Id
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：1
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：desc
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：正常登录
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：api_Name
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：我们开始修改啦啊啦啦啦
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：api_Type
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：post_json
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：login_by
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：paramter
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：module
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：login
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：expected
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：result
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：case_Id
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：2
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：desc
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：api_Name
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：登录接口
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：api_Type
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：post_json
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：login_by
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：paramter
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：module
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：login
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：expected
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询字段：result
2020-05-11 17:44:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:185) - [ INFO ] -> 查询结果：
2020-05-11 17:44:58 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:309) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:142) - [ INFO ] -> 开始执行查询操作！
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：case_Id
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：1
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：desc
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：正常登录
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：api_Name
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：我们开始修改啦啊啦啦啦
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：api_Type
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：post_json
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：login_by
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：paramter
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：module
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：login
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：expected
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：result
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：case_Id
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：2
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：desc
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：api_Name
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：登录接口
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：api_Type
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：post_json
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：login_by
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：paramter
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：module
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：login
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：expected
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:182) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:183) - [ INFO ] -> 查询字段：result
2020-05-11 17:44:59 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:184) - [ INFO ] -> 查询结果：
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:300) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 开始执行查询操作！
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：case_Id
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：1
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：desc
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：正常登录
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Name
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：我们开始修改啦啊啦啦啦
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Type
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：post_json
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：login_by
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：paramter
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：module
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：login
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：expected
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：result
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：case_Id
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：2
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：desc
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Name
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：登录接口
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Type
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：post_json
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：login_by
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：paramter
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：module
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：login
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：expected
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 4;]
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：result
2020-05-11 17:48:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:300) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 开始执行查询操作！
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：case_Id
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：1
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：desc
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：正常登录
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Name
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：我们开始修改啦啊啦啦啦
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Type
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：post_json
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：login_by
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：paramter
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：{"password":"p1213","username":"2538699146"}
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：module
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：login
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：expected
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：{"msg":"登录成功"}
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：result
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：case_Id
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：2
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：desc
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：账号为空登录
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Name
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：登录接口
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Type
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：post_json
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：login_by
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：paramter
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：{"password":"p1213","username":""}
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：module
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：login
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：expected
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：{"msg":"登录失败"}
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：result
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：case_Id
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：6
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：desc
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：数据写入测试
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Name
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：test_home
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Type
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：post
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：api_Uri
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：test/api
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：paramter
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：{"test":1,"desc":"这是测试数据写入"}
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：module
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：test
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：expected
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：{"code":"1001"}
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:173) - [ INFO ] -> 当前执行查询sql：[select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';, select * from apiautotestparamter where case_id = 6;]
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:174) - [ INFO ] -> 查询字段：result
2020-05-11 17:48:46 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:175) - [ INFO ] -> 查询结果：
2020-05-11 17:51:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:301) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 17:51:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 开始执行查询操作！
2020-05-11 17:51:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:176) - [ INFO ] -> 
当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
查询结果：{result=, api_Type=post_json, paramter={"password":"p1213","username":""}, module=login, expected={"msg":"登录失败"}, case_Id=2, api_Name=登录接口, api_Uri=login_by, desc=账号为空登录}
2020-05-11 17:51:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:176) - [ INFO ] -> 
当前执行查询sql：select * from apiautotestparamter where case_id = 6;
查询结果：{result=, api_Type=post, paramter={"test":1,"desc":"这是测试数据写入"}, module=test, expected={"code":"1001"}, case_Id=6, api_Name=test_home, api_Uri=test/api, desc=数据写入测试}
2020-05-11 17:54:55 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:299) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 17:54:56 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:133) - [ INFO ] -> 开始执行查询操作！
2020-05-11 17:54:56 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:176) - [ INFO ] -> 
当前执行查询sql：select * from apiautotestparamter where module = 'login' and api_Uri = 'login_by';
查询结果：{result=, api_Type=post_json, paramter={"password":"p1213","username":""}, module=login, expected={"msg":"登录失败"}, case_Id=2, api_Name=登录接口, api_Uri=login_by, desc=账号为空登录}
2020-05-11 17:54:56 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:176) - [ INFO ] -> 
当前执行查询sql：select * from apiautotestparamter where case_id = 6;
查询结果：{result=, api_Type=post, paramter={"test":1,"desc":"这是测试数据写入"}, module=test, expected={"code":"1001"}, case_Id=6, api_Name=test_home, api_Uri=test/api, desc=数据写入测试}
2020-05-11 17:57:43 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:294) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 17:57:44 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:128) - [ INFO ] -> 开始执行查询操作！
2020-05-11 18:18:55 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:275) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 18:18:56 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:110) - [ INFO ] -> 开始执行查询操作！
2020-05-11 18:20:17 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:275) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 18:20:17 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:110) - [ INFO ] -> 开始执行查询操作！
2020-05-11 18:24:26 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:275) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 18:24:27 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:110) - [ INFO ] -> 开始执行查询操作！
2020-05-11 18:26:44 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:275) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 18:26:44 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:110) - [ INFO ] -> 开始执行查询操作！
2020-05-11 18:32:28 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:275) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 18:32:29 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:94) - [ INFO ] -> 开始执行更新数据操作！
2020-05-11 18:33:57 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:276) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 18:33:58 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:94) - [ INFO ] -> 开始执行更新数据操作！
2020-05-11 18:33:58 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:105) - [ INFO ] -> 更新成功，执行的sql：UPDATE apiautotestparamter 
SET api_Name = '修改测试' 
WHERE
	api_Type = 'post_json' 
	AND case_Id = 1;
2020-05-11 18:36:47 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:276) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 18:36:48 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:94) - [ INFO ] -> 开始执行更新数据操作！
2020-05-11 18:36:48 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:105) - [ INFO ] -> 更新成功，执行的sql：UPDATE apiautotestparamter 
SET api_Name = '批量修改测试1' 
WHERE
	api_Type = 'post_json' 
	AND case_Id = 1;
2020-05-11 18:36:48 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:105) - [ INFO ] -> 更新成功，执行的sql：UPDATE apiautotestparamter 
SET api_Name = '批量修改2' 
WHERE
case_Id = 6;
2020-05-11 18:39:16 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:276) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 18:39:17 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:111) - [ INFO ] -> 开始执行查询操作！
2020-05-11 18:40:02 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:276) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 18:40:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:111) - [ INFO ] -> 开始执行查询操作！
2020-05-11 18:40:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 
当前执行查询sql：select * from apiautotestparamter where case_id = 6;
查询结果：{result=, api_Type=post, paramter={"test":1,"desc":"这是测试数据写入"}, module=test, expected={"code":"1001"}, case_Id=6, api_Name=批量修改2, api_Uri=test/api, desc=数据写入测试}
2020-05-11 18:40:03 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:154) - [ INFO ] -> 
当前执行查询sql：select api_Name from apiautotestparamter where case_id = 1;
查询结果：{api_Name=批量修改测试1}
2020-05-11 21:14:09 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:14:10 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:14:40 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:14:41 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:16:31 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:16:31 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:18:58 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:18:58 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:18:58 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select 'desc' from apiautotestparamter where case_Id = 1
查询结果：{desc=desc}
2020-05-11 21:20:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:20:05 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:20:19 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:20:19 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:20:42 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:20:42 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:20:42 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select  api_Name from apiautotestparamter where case_Id = 1
查询结果：{api_Name=批量修改测试1}
2020-05-11 21:24:57 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:24:57 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:24:59 method: cn.Knife.Wework.Utils.Super_Utils.YamlFactoryIsReadYamlAndWriterYaml(Super_Utils.java:184) - [ INFO ] -> 当前操作状态：读取
2020-05-11 21:25:03 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:25:03 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:25:04 method: cn.Knife.Wework.Utils.Rest_Perfect.getSystemDate(Rest_Perfect.java:63) - [ INFO ] -> 当前系统时间：Mon May 11 21:25:04 CST 2020
2020-05-11 21:25:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:25:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:25:04 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select  api_Name from apiautotestparamter where case_Id = 1
查询结果：{api_Name=批量修改测试1}
2020-05-11 21:25:04 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 21:25:04 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:25:04 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:25:05 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 21:25:05 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:25:05 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:25:05 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:25:05 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:25:06 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:25:06 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:25:06 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:25:06 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:25:07 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:25:07 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:25:07 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:25:07 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:25:07 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:25:07 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:25:08 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:25:08 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:25:08 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 21:25:08 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:25:08 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:38:25 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:38:26 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:38:26 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select  api_Name from apiautotestparamter where case_Id = 1
查询结果：{api_Name=批量修改测试1}
2020-05-11 21:38:26 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 21:38:26 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:38:26 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:38:28 method: cn.Knife.Wework.Utils.Super_Utils.YamlFactoryIsReadYamlAndWriterYaml(Super_Utils.java:184) - [ INFO ] -> 当前操作状态：读取
2020-05-11 21:38:31 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:38:31 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select api_Name from apiautotestparamter where case_Id = 8;
查询结果：{api_Name=0}
2020-05-11 21:40:32 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:40:32 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:40:33 method: cn.Knife.Wework.Utils.Super_Utils.YamlFactoryIsReadYamlAndWriterYaml(Super_Utils.java:184) - [ INFO ] -> 当前操作状态：读取
2020-05-11 21:40:37 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:40:37 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:40:37 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:40:37 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:40:38 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:40:38 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:40:38 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select  api_Name from apiautotestparamter where case_Id = 1
查询结果：{api_Name=批量修改测试1}
2020-05-11 21:40:38 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:40:38 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select api_Name from apiautotestparamter where case_Id = 8;
查询结果：{api_Name=0}
2020-05-11 21:40:39 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 21:40:39 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:40:39 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:41:12 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:41:12 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:41:13 method: cn.Knife.Wework.Utils.Super_Utils.YamlFactoryIsReadYamlAndWriterYaml(Super_Utils.java:184) - [ INFO ] -> 当前操作状态：读取
2020-05-11 21:41:17 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:41:17 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:41:18 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:41:18 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:41:18 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select  api_Name from apiautotestparamter where case_Id = 1
查询结果：{api_Name=批量修改测试1}
2020-05-11 21:41:18 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:41:18 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select api_Name from apiautotestparamter where case_Id = 8;
查询结果：{api_Name=0}
2020-05-11 21:41:18 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 21:41:18 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:41:18 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:44:54 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:44:54 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:44:56 method: cn.Knife.Wework.Utils.Super_Utils.YamlFactoryIsReadYamlAndWriterYaml(Super_Utils.java:184) - [ INFO ] -> 当前操作状态：读取
2020-05-11 21:44:59 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:44:59 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:45:00 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:45:00 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:45:00 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select  api_Name from apiautotestparamter where case_Id = 1
查询结果：{api_Name=批量修改测试1}
2020-05-11 21:45:00 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:45:00 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select api_Name from apiautotestparamter where case_Id = 8;
查询结果：{api_Name=0}
2020-05-11 21:46:46 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:46:46 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 21:46:47 method: cn.Knife.Wework.Utils.Super_Utils.YamlFactoryIsReadYamlAndWriterYaml(Super_Utils.java:184) - [ INFO ] -> 当前操作状态：读取
2020-05-11 21:46:52 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:262) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 21:46:52 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:46:52 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select  api_Name from apiautotestparamter where case_Id = 1
查询结果：{api_Name=批量修改测试1}
2020-05-11 21:46:52 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:97) - [ INFO ] -> 开始执行查询操作！
2020-05-11 21:46:52 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:140) - [ INFO ] -> 
当前执行查询sql：select api_Name from apiautotestparamter where case_Id = 8;
查询结果：{api_Name=0}
2020-05-11 21:46:52 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 21:46:52 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 21:46:52 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 22:04:06 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:174) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 22:04:07 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:94) - [ INFO ] -> 开始执行查询操作！
2020-05-11 22:04:07 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 
当前执行查询sql：select * from apiautotestparamter where case_id = 6;
查询结果：{result=, api_Type=post, paramter={"test":1,"desc":"这是测试数据写入"}, module=test, expected={"code":"1001"}, case_Id=6, api_Name=批量修改2, api_Uri=test/api, desc=数据写入测试}
2020-05-11 22:05:08 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:174) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 22:05:09 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:94) - [ INFO ] -> 开始执行查询操作！
2020-05-11 22:05:09 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 
当前执行查询sql：select * from apiautotestparamter where case_id = 6;
查询结果：{result=, api_Type=post, paramter={"test":1,"desc":"这是测试数据写入"}, module=test, expected={"code":"1001"}, case_Id=6, api_Name=批量修改2, api_Uri=test/api, desc=数据写入测试}
2020-05-11 22:05:09 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 
当前执行查询sql：select api_Name from apiautotestparamter where case_id = 1;
查询结果：{api_Name=批量修改测试1}
2020-05-11 22:06:47 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:174) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 22:06:48 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:77) - [ INFO ] -> 开始执行更新数据操作！
2020-05-11 22:06:48 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:88) - [ INFO ] -> 更新成功，执行的sql：UPDATE apiautotestparamter 
SET api_Name = '修改测试' 
WHERE
	api_Type = 'post_json' 
	AND case_Id = 1;
2020-05-11 22:11:37 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:174) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 22:11:38 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:77) - [ INFO ] -> 开始执行更新数据操作！
2020-05-11 22:11:38 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:88) - [ INFO ] -> 更新成功，执行的sql：UPDATE apiautotestparamter 
SET api_Name = '批量修改测试1' 
WHERE
	api_Type = 'post_json' 
	AND case_Id = 1;
2020-05-11 22:11:38 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:88) - [ INFO ] -> 更新成功，执行的sql：UPDATE apiautotestparamter 
SET api_Name = '批量修改2' 
WHERE
case_Id = 6;
2020-05-11 22:25:14 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 22:25:14 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 22:25:16 method: cn.Knife.Wework.Utils.Super_Utils.YamlFactoryIsReadYamlAndWriterYaml(Super_Utils.java:184) - [ INFO ] -> 当前操作状态：读取
2020-05-11 22:25:20 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 22:25:20 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
2020-05-11 22:25:20 method: cn.Knife.Wework.VariablesStore.VariablesUtil.getDepartmentName(VariablesUtil.java:23) - [ INFO ] -> 开始从数据库获取变量！
2020-05-11 22:25:20 method: cn.Knife.Wework.Utils.JdbcQueryUtil.getConnection(JdbcQueryUtil.java:174) - [ INFO ] -> 
***********开始连接数据库***********
连接地址：[jdbc:mysql://localhost:3306/test?serverTimezone=UTC]
用户名：[root]
密码：[p2538699146]
2020-05-11 22:25:21 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:94) - [ INFO ] -> 开始执行查询操作！
2020-05-11 22:25:21 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 
当前执行查询sql：select  api_Name from apiautotestparamter where case_Id = 1
查询结果：{api_Name=批量修改测试1}
2020-05-11 22:25:21 method: cn.Knife.Wework.VariablesStore.VariablesUtil.getDepartmentName(VariablesUtil.java:28) - [ INFO ] -> 获取到的变量值：批量修改测试1
2020-05-11 22:25:21 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:94) - [ INFO ] -> 开始执行查询操作！
2020-05-11 22:25:21 method: cn.Knife.Wework.Utils.JdbcQueryUtil.jdbcQueryAndUpdate(JdbcQueryUtil.java:137) - [ INFO ] -> 
当前执行查询sql：select api_Name from apiautotestparamter where case_Id = 8;
查询结果：{api_Name=0}
2020-05-11 22:25:21 method: cn.Knife.Wework.Utils.Super_Utils.updateFromYamlRest_Info(Super_Utils.java:154) - [ INFO ] -> 当前参数获取方式：从parame中取出body
2020-05-11 22:25:21 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:29) - [ INFO ] -> 开始初始化RequestSpecification
2020-05-11 22:25:21 method: cn.Knife.Wework.Utils.Rest_Perfect.getDefaultRequestSpecification(Rest_Perfect.java:31) - [ INFO ] -> 
              ____  __.        .__   _____                        
  /\|\/\       |    |/ _|  ____  |__|_/ ____\  ____        /\|\/\   
 _)    (__     |      <   /    \ |  |\   __\ _/ __ \      _)    (__ 
 \_     _/     |    |  \ |   |  \|  | |  |   \  ___/      \_     _/ 
   )    \   /\ |____|__ \|___|  /|__| |__|    \___  > /\    )    \  
   \/\|\/   \/         \/     \/                  \/  \/    \/\|\/  
